<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimpleDiscord</name>
    </assembly>
    <members>
        <member name="T:SimpleDiscord.ApplicationCommandOptionType">
            <summary>
            Represents the type of an application command option, as defined in <see href="https://discord.com/developers/docs/interactions/slash-commands#applicationcommandoptiontype">Discord's documentation</see>.
            </summary>
        </member>
        <member name="T:SimpleDiscord.DiscordClient">
            <summary>
            Represents a client for a Discord bot account.
            </summary>
            <remarks>
            <para>This class contains functionality for maintaining a connection to a Discord bot (keeping it online), and provides methods for interacting with Discord's API. However, on its own, this class does not make the bot do anything. The intended usage of this class is to create a subclass that overrides the <see cref="M:SimpleDiscord.DiscordClient.HandleEvent(System.String,System.Text.Json.JsonElement)"/> method.</para>
            </remarks>
        </member>
        <member name="P:SimpleDiscord.DiscordClient.IsDisposed">
            <summary>
            Gets a value indicating whether or not this instance has been disposed and cannot be used for connecting.
            </summary>
            <value>
            <see langword="true"/> if this client has been disposed; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:SimpleDiscord.DiscordClient.Intents">
            <summary>
            Gets the events that this client wishes to subscribe to, as specified in the constructor of this class.
            </summary>
            <value>
            The events that this client wishes to subscribe to.
            </value>
        </member>
        <member name="P:SimpleDiscord.DiscordClient.SessionId">
            <summary>
            Gets the ID of the current session, or the last session if that session was not ended.
            </summary>
            <remarks>
            <para>If this value is not <see langword="null"/> while connecting, the <see cref="M:SimpleDiscord.DiscordClient.Connect"/> method will attempt to resume the connection rather than starting a new session.</para>
            </remarks>
            <value>
            The ID of the current session. <see langword="null"/> if this <see cref="T:SimpleDiscord.DiscordClient"/> instance has never connected before, or if the last session was ended.
            </value>
        </member>
        <member name="P:SimpleDiscord.DiscordClient.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.#ctor(System.String,SimpleDiscord.GatewayIntents)">
            <summary>
            Constructs a client for a Discord bot account.
            </summary>
            <param name="token">The token of the bot account to use for authentication.</param>
            <param name="intents">The events that this client wishes to subscribe to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="token"/> is <see langword="null"/>.</exception>
        </member>
        <member name="P:SimpleDiscord.DiscordClient.IsConnected">
            <summary>
            Gets a value indicating whether this client is connected or connecting.
            </summary>
            <value>
            <see langword="true"/> if this client is connected or connecting; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.Connect">
            <summary>
            Connects the client to Discord and maintains the connection.
            </summary>
            <remarks>
            <para>This method makes the bot connect to Discord, keeps it online, and calls the <see cref="M:SimpleDiscord.DiscordClient.HandleEvent(System.String,System.Text.Json.JsonElement)"/> method whenever an event occurs. Make sure to override that method if you want to give the bot custom functionality; otherwise the bot will simply do nothing.</para>
            </remarks>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes when the bot disconnects. The result is <see langword="true"/> if the caller should attempt to reconnect by calling <see cref="M:SimpleDiscord.DiscordClient.Connect"/> again.</returns>
            <exception cref="T:System.ObjectDisposedException">This object is disposed.</exception>
            <exception cref="T:System.InvalidOperationException">This client is already connected or connecting.</exception>
            <exception cref="T:System.Net.WebSockets.WebSocketException">An error occurred in the WebSocket connection.</exception>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.HandleEvent(System.Text.Json.JsonDocument)">
            <summary>
            Calls <see cref="M:SimpleDiscord.DiscordClient.HandleEvent(System.String,System.Text.Json.JsonElement)"/> with the appropriate values.
            </summary>
            <remarks>
            <para>The point of this method is to make sure that the <paramref name="receivedDocument"/> can be disposed only after <see cref="M:SimpleDiscord.DiscordClient.HandleEvent(System.String,System.Text.Json.JsonElement)"/> has completed,</para>
            </remarks>
            <param name="receivedDocument">The <see cref="T:System.Text.Json.JsonDocument"/> representing the JSON data received from the gateway.</param>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.HandleEvent(System.String,System.Text.Json.JsonElement)">
            <summary>
            Performs bot-specific actions upon receiving gateway events. It is called from the <see cref="M:SimpleDiscord.DiscordClient.Connect"/> method.
            </summary>
            <remarks>
            <para>Your custom Discord client should override this method to add your bot's functionality. The base method does nothing.</para>
            <para>Although this method returns a <see cref="T:System.Threading.Tasks.Task"/>, it won't be directly awaited in the <see cref="M:SimpleDiscord.DiscordClient.Connect"/> method, meaning that separate events can be executed in parralel.</para>
            <para>Exceptions thrown in this method will be caught and ignored in the <see cref="M:SimpleDiscord.DiscordClient.Connect"/> method.</para>
            </remarks>
            <param name="eventName">The name of the event. A full list of possible intents can be found in <see href="https://discord.com/developers/docs/topics/gateway#commands-and-events">Discord's documentation</see>.</param>
            <param name="eventData">The event-specific event data that was received.</param>
            <exception cref="T:System.Exception">An uncaught exception occurred while handling the event.</exception>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.GracefullyDisconnect(System.Net.WebSockets.WebSocketCloseStatus,System.String)">
            <summary>
            Disconnects this client gracefully if it is connected, and resets the session.
            </summary>
            <param name="closeStatus">The WebSocket close status.</param>
            <param name="statusDescription">A description of the close status.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes once the WebSocket connection has been closed.</returns>
            <seealso cref="M:SimpleDiscord.DiscordClient.AbruptlyDisconnect"/>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.AbruptlyDisconnect">
            <summary>
            Disconnects this client abruptly if it is connected, and resets the session.
            </summary>
            <seealso cref="M:SimpleDiscord.DiscordClient.GracefullyDisconnect(System.Net.WebSockets.WebSocketCloseStatus,System.String)"/>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.Disconnect">
            <summary>
            Puts the client into a disconnected state if it is connected, but does not close the connection.
            </summary>
            <remarks>
            <para>This method leaves the <see cref="P:SimpleDiscord.DiscordClient.SessionId"/> intact, so that <see cref="M:SimpleDiscord.DiscordClient.Connect"/> will be able to resume the connection.</para>
            </remarks>
            <returns>The old value <see cref="F:SimpleDiscord.DiscordClient.webSocket"/>, so that the caller can properly close the connection. <see langword="null"/> if this client was already disconnected.</returns>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.ResetSession">
            <summary>
            Resets the session. Should only be used while the client is disconnected.
            </summary>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.SendToGateway(System.ReadOnlyMemory{System.Byte},System.Boolean)">
            <summary>
            Schedules data to be sent to the gateway over the WebSocket connection.
            </summary>
            <param name="data">The data to be sent.</param>
            <param name="priority"><see langword="true"/> if this data should take priority over other data if contrained by ratelimits; otherwise, false.</param>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.SendData(System.Object)">
            <summary>
            The <see cref="T:System.Threading.TimerCallback"/> for the <see cref="F:SimpleDiscord.DiscordClient.sendingTimer"/>. Sends the first item in the <see cref="F:SimpleDiscord.DiscordClient.sendingQueue"/>.
            </summary>
            <param name="state">The <see cref="T:SimpleDiscord.DiscordClient"/> that should send the data.</param>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.ScheduleHeartbeat(System.Object)">
            <summary>
            The <see cref="T:System.Threading.TimerCallback"/> for the <see cref="F:SimpleDiscord.DiscordClient.heartbeatTimer"/>. Schedules a heartbeat message to be sent.
            </summary>
            <param name="state">The <see cref="T:SimpleDiscord.DiscordClient"/> instance that should send the heartbeat.</param>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.SendHttpRequest(System.Net.Http.HttpMethod,System.String,SimpleDiscord.RatelimitBucket,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.String)">
            <summary>
            Sends an HTTP request, optionally taking ratelimits into account.
            </summary>
            <param name="method">The HTTP method to use.</param>
            <param name="route">The URI to which the request will be sent. This should be a relative path without a precieding <c>/</c>, for example: <c>guilds/1234</c>.</param>
            <param name="bucket">The ratelimit bucket to use for this request. You should use the same bucket for requests to the same endpoint. This method will lock onto the bucket before using it. If <see langword="null"/>, ratelimits will be ignored.</param>
            <param name="content">If not <see langword="null"/>, this will be the content of the request. This must be a JSON object encoded as UTF-8.</param>
            <param name="reason">If not <see langword="null"/>, this reason will be specified in the audit log.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes once the entire HTTP request is complete.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="method"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.UriFormatException"><paramref name="route"/> is not a valid URI.</exception>
            <exception cref="T:System.Net.Http.HttpRequestException">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">The request failed due to timeout.</exception>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.ActuallySendHttpRequest(System.Net.Http.HttpRequestMessage,SimpleDiscord.RatelimitBucket)">
            <summary>
            Internal method for sending an HTTP request and updating the values of the bucket. This method is only called in the <see cref="M:SimpleDiscord.DiscordClient.SendHttpRequest(System.Net.Http.HttpMethod,System.String,SimpleDiscord.RatelimitBucket,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.String)"/> method.
            </summary>
            <param name="request">The request that should be made.</param>
            <param name="bucket">The ratelimit bucket that should be updated.</param>
            <returns>The HTTP response received from the request.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="request"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">The request message was already sent by the <see cref="F:SimpleDiscord.DiscordClient.httpClient"/>.</exception>
            <exception cref="T:System.Net.Http.HttpRequestException">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">The request failed due to timeout.</exception>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.SendChatMessage(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Sends a chat message in a channel.
            </summary>
            <remarks>
            <para>Before using this method, the client must be conneted and have received the Ready event.</para>
            </remarks>
            <param name="channelId">The ID of the channel.</param>
            <param name="content">The message to post.</param>
            <param name="referencedMessageId">If not <see langword="null"/>, the posted message will be a reply to the message ID.</param>
            <param name="isTts">If <see langword="true"/>, this will be a TTS message.</param>
            <returns>The HTTP response received from the request.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="content"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="channelId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="channelId"/> is not a valid ID.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="referencedMessageId"/> is not <see langword="null"/> and not a valid ID.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="content"/> is too long.</exception>
            <exception cref="T:System.Net.Http.HttpRequestException">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">The request failed due to timeout.</exception>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.AddRole(System.String,System.String,System.String,System.String)">
            <summary>
            Adds a role to a user in a guild.
            </summary>
            <param name="guildId">The ID of the guild.</param>
            <param name="userId">The ID of the user.</param>
            <param name="roleId">The ID of the role.</param>
            <param name="reason">The reason for adding the role.</param>
            <returns>The HTTP response received from the request.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="guildId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="guildId"/> is not a valid ID.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="userId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="userId"/> is not a valid ID.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="roleId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="roleId"/> is not a valid ID.</exception>
            <exception cref="T:System.Net.Http.HttpRequestException">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">The request failed due to timeout.</exception>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.RemoveRole(System.String,System.String,System.String,System.String)">
            <summary>
            Removes a role from a user.
            </summary>
            <param name="guildId">The ID of the guild.</param>
            <param name="userId">The ID of the user.</param>
            <param name="roleId">The ID of the role.</param>
            <param name="reason">The reason for removing the role.</param>
            <returns>The HTTP response received from the request.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="guildId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="guildId"/> is not a valid ID.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="userId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="userId"/> is not a valid ID.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="roleId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="roleId"/> is not a valid ID.</exception>
            <exception cref="T:System.Net.Http.HttpRequestException">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">The request failed due to timeout.</exception>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.RegisterSimpleCommand(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{SimpleDiscord.IApplicationCommandOption},System.String)">
            <summary>
            Registers a parameterless command.
            </summary>
            <remarks>
            <para>You do not have to specify the <paramref name="userId"/> only if the client has connected at least once; then the client's known user ID will be used.</para>
            </remarks>
            <param name="guildId">The ID of the guild for which to register the command, or <see langword="null"/> to register a global command.</param>
            <param name="commandName">The 1-32 character name of the command. This should match <c>^[\w-]{1,32}$</c>.</param>
            <param name="commandDescription">The description of the command.</param>
            <param name="commandOptions">The parameters of the command.</param>
            <param name="userId">The ID of the application/client. If not specified, the cached ID will be used. Must be specified if this client hasn't been connected yet.</param>
            <returns>The HTTP response received from the request.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="userId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="userId"/> is not a valid ID.</exception>
            <exception cref="T:System.InvalidOperationException">You have not connected the client at least once, or specified a user ID.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="commandName"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="commandDescription"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="guildId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="guildId"/> is not a valid ID.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="commandOptions"/> contains a <see langword="null"/> value.</exception>
            <exception cref="T:System.Net.Http.HttpRequestException">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">The request failed due to timeout.</exception>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.RespondToInteraction(System.String,System.String,SimpleDiscord.InteractionResponseType,System.String,System.Boolean,System.Boolean)">
            <summary>
            Responds to an interaction with the specified token.
            </summary>
            <param name="interactionId">The ID of the interaction.</param>
            <param name="interactionToken">The token of the interaction.</param>
            <param name="responseType">The response type to use.</param>
            <param name="content">An optional message to send.</param>
            <param name="isEphemeral">If <see langword="true"/>, the message will be ephemeral. Ignored if <paramref name="content"/> is <see langword="null"/>.</param>
            <param name="isTts">If <see langword="true"/>, the message will be a TTS message. Ignored if <paramref name="content"/> is <see langword="null"/>.</param>
            <returns>The HTTP response received from the request.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="interactionToken"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="interactionId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="interactionId"/> is not a valid ID.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="interactionToken"/> is not a valid token.</exception>
            <exception cref="T:System.Net.Http.HttpRequestException">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">The request failed due to timeout.</exception>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.Dispose">
            <summary>
            Abruptly disconnects this <see cref="T:SimpleDiscord.DiscordClient"/> and disposes all managed resources.
            </summary>
            <remarks>
            <para>This method is idempotent.</para>
            </remarks>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.Dispose(System.Boolean)">
            <summary>
            Abruptly disconnects this <see cref="T:SimpleDiscord.DiscordClient"/> and optionally disposes all managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> if this method has been called form <see cref="M:SimpleDiscord.DiscordClient.Dispose"/>; <see langword="false"/> if this method has been called from the finalizer.</param>
        </member>
        <member name="M:SimpleDiscord.DiscordClient.Finalize">
            <summary>
            Finalizes a <see cref="T:SimpleDiscord.DiscordClient"/>.
            </summary>
        </member>
        <member name="T:SimpleDiscord.GatewayIntents">
            <summary>
            Specifies which events a client wishes to subscribe to. See <see href="https://discord.com/developers/docs/topics/gateway#gateway-intents">the documentation</see> for an overview.
            </summary>
            <remarks>
            <para>Any events not defined in an intent are considered "passthrough" and will always be received regardless of the specified intents.</para>
            <para>Invalid or disallowed intents will cause the connection to fail.</para>
            </remarks>
        </member>
        <member name="F:SimpleDiscord.GatewayIntents.None">
            <summary>
            Indicates that the client does not wish to subscribe to any event.
            </summary>
        </member>
        <member name="F:SimpleDiscord.GatewayIntents.Guilds">
            <summary>
            Indicates all events related to guilds.
            </summary>
            <remarks>
            <para>The following events are included in this intent:</para>
            <list type="bullet">
            <item>
            <description>Guild Create</description>
            </item>
            <item>
            <description>Guild Update</description>
            </item>
            <item>
            <description>Guild Delete</description>
            </item>
            <item>
            <description>Guild Role Create</description>
            </item>
            <item>
            <description>Guild Role Delete</description>
            </item>
            <item>
            <description>Channel Create</description>
            </item>
            <item>
            <description>Channel Update</description>
            </item>
            <item>
            <description>Channel Delete</description>
            </item>
            <item>
            <description>Channel Pins Update</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:SimpleDiscord.GatewayIntents.GuildMembers">
            <summary>
            Indicates all events related to guild members.
            </summary>
            <remarks>
            <para>The following events are included in this intent:</para>
            <list type="bullet">
            <item>
            <description>Guild Member Add</description>
            </item>
            <item>
            <description>Guild Member Update</description>
            </item>
            <item>
            <description>Guild Member Remove</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:SimpleDiscord.GatewayIntents.GuildBans">
            <summary>
            Indicates all events related to guild bans.
            </summary>
            <remarks>
            <para>The following events are included in this intent:</para>
            <list type="bullet">
            <item>
            <description>Guild Ban Add</description>
            </item>
            <item>
            <description>Guild Ban Remove</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:SimpleDiscord.GatewayIntents.GuildEmojis">
            <summary>
            Indicates the event related to guild emoji.
            </summary>
            <remarks>
            <para>The following event is included in this intent:</para>
            <list type="bullet">
            <item>
            <description>Guild Emoji Update</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:SimpleDiscord.GatewayIntents.GuildIntegrations">
            <summary>
            Indicates the event related to guild integrations.
            </summary>
            <remarks>
            <para>The following event is included in this intent:</para>
            <list type="bullet">
            <item>
            <description>Guild Integration Update</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:SimpleDiscord.GatewayIntents.GuildWebhooks">
            <summary>
            Indicates the event related to guild webhooks.
            </summary>
            <remarks>
            <para>The following event is included in this intent:</para>
            <list type="bullet">
            <item>
            <description>Webhooks Update</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:SimpleDiscord.GatewayIntents.GuildInvites">
            <summary>
            Indicates all events related to guild invites.
            </summary>
            <remarks>
            <para>The following events are included in this intent:</para>
            <list type="bullet">
            <item>
            <description>Invite Create</description>
            </item>
            <item>
            <description>Invite Delete</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:SimpleDiscord.GatewayIntents.GuildVoiceStates">
            <summary>
            Indicates the event related to guild voice states.
            </summary>
            <remarks>
            <para>The following event is included in this intent:</para>
            <list type="bullet">
            <item>
            <description>Voice State Update</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:SimpleDiscord.GatewayIntents.GuildPresences">
            <summary>
            Indicates the event related to guild presences.
            </summary>
            <remarks>
            <para>The following event is included in this intent:</para>
            <list type="bullet">
            <item>
            <description>Presence Update</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:SimpleDiscord.GatewayIntents.GuildMessages">
            <summary>
            Indicates all events related to guild messages.
            </summary>
            <remarks>
            <para>The following events are included in this intent:</para>
            <list type="bullet">
            <item>
            <description>Message Create</description>
            </item>
            <item>
            <description>Message Update</description>
            </item>
            <item>
            <description>Message Delete</description>
            </item>
            <item>
            <description>Message Delete Bulk</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:SimpleDiscord.GatewayIntents.GuildMessageReactions">
            <summary>
            Indicates all events related to guild message reactions.
            </summary>
            <remarks>
            <para>The following events are included in this intent:</para>
            <list type="bullet">
            <item>
            <description>Message Reaction Add</description>
            </item>
            <item>
            <description>Message Reaction Remove</description>
            </item>
            <item>
            <description>Message Reaction Remove All</description>
            </item>
            <item>
            <description>Message Reaction Remove Emoji</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:SimpleDiscord.GatewayIntents.GuildMessageTyping">
            <summary>
            Indicates the event related to guild message typing.
            </summary>
            <remarks>
            <para>The following event is included in this intent:</para>
            <list type="bullet">
            <item>
            <description>Typing Start</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:SimpleDiscord.GatewayIntents.DirectMessages">
            <summary>
            Indicates all events related to direct messages.
            </summary>
            <remarks>
            <para>The following events are included in this intent:</para>
            <list type="bullet">
            <item>
            <description>Message Create</description>
            </item>
            <item>
            <description>Message Update</description>
            </item>
            <item>
            <description>Message Delete</description>
            </item>
            <item>
            <description>Channel Pins Update</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:SimpleDiscord.GatewayIntents.DirectMessageReactions">
            <summary>
            Indicates all events related to direct message reactions.
            </summary>
            <remarks>
            <para>The following events are included in this intent:</para>
            <list type="bullet">
            <item>
            <description>Message Reaction Add</description>
            </item>
            <item>
            <description>Message Reaction Remove</description>
            </item>
            <item>
            <description>Message Reaction Remove All</description>
            </item>
            <item>
            <description>Message Reaction Remove Emoji</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:SimpleDiscord.GatewayIntents.DirectMessageTyping">
            <summary>
            Indicates the event related to direct message typing.
            </summary>
            <remarks>
            <para>The following event is included in this intent:</para>
            <list type="bullet">
            <item>
            <description>Typing Start</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="T:SimpleDiscord.GatewayOpcode">
            <summary>
            Represents an opcode that is used in the WebSocket connection with Discord in the <see cref="T:SimpleDiscord.DiscordClient"/> class.
            </summary>
            <seealso href="https://discord.com/developers/docs/topics/opcodes-and-status-codes#gateway-opcodes"/>
        </member>
        <member name="F:SimpleDiscord.GatewayOpcode.Dispatch">
            <summary>
            An event was dispatched.
            </summary>
        </member>
        <member name="F:SimpleDiscord.GatewayOpcode.Heartbeat">
            <summary>
            Fired periodically by the client to keep the connection alive.
            </summary>
        </member>
        <member name="F:SimpleDiscord.GatewayOpcode.Identify">
            <summary>
            Starts a new session during the initial handshake.
            </summary>
        </member>
        <member name="F:SimpleDiscord.GatewayOpcode.PresenceUpdate">
            <summary>
            Update the client's presence.
            </summary>
        </member>
        <member name="F:SimpleDiscord.GatewayOpcode.VoiceStateUpdate">
            <summary>
            Used to join/leave or move between voice channels.
            </summary>
        </member>
        <member name="F:SimpleDiscord.GatewayOpcode.Resume">
            <summary>
            Resume a previous session that was disconnected.
            </summary>
        </member>
        <member name="F:SimpleDiscord.GatewayOpcode.Reconnect">
            <summary>
            You should attempt to reconnect and resume immediately.
            </summary>
        </member>
        <member name="F:SimpleDiscord.GatewayOpcode.RequestGuildMembers">
            <summary>
            Request information about offline guild members in a large guild.
            </summary>
        </member>
        <member name="F:SimpleDiscord.GatewayOpcode.InvalidSession">
            <summary>
            The session has been invalidated. You should reconnect and identify/resume accordingly.
            </summary>
        </member>
        <member name="F:SimpleDiscord.GatewayOpcode.Hello">
            <summary>
            Sent immediately after connecting, contains the <c>heartbeat_interval</c> to use.
            </summary>
        </member>
        <member name="F:SimpleDiscord.GatewayOpcode.HeartbeatAck">
            <summary>
            Sent in response to receiving a heartbeat to acknowledge that it has been received.
            </summary>
        </member>
        <member name="T:SimpleDiscord.IApplicationCommandOption">
            <summary>
            Represents an application command option, as defined in <see href="https://discord.com/developers/docs/interactions/slash-commands#applicationcommandoption">Discord's documentation</see>.
            </summary>
        </member>
        <member name="P:SimpleDiscord.IApplicationCommandOption.Type">
            <summary>
            Gets a value indicating type of this command option.
            </summary>
            <value>
            The type of this command option. This should be a defined value in the <see cref="T:SimpleDiscord.ApplicationCommandOptionType"/> enum.
            </value>
        </member>
        <member name="P:SimpleDiscord.IApplicationCommandOption.Name">
            <summary>
            Gets the name of the command option.
            </summary>
            <value>
            The 1-32 character name of the command option. This should match <c>^[\w-]{1,32}$</c>.
            </value>
        </member>
        <member name="P:SimpleDiscord.IApplicationCommandOption.Description">
            <summary>
            Gets the description of this command option.
            </summary>
            <value>
            The 1-100 character description of te command option.
            </value>
        </member>
        <member name="P:SimpleDiscord.IApplicationCommandOption.IsRequired">
            <summary>
            Gets a value indicating whether the parameter is required or optional.
            </summary>
            <value>
            <see langword="true"/> if the parameter is required; <see langword="false"/> if the parameter is optional.
            </value>
        </member>
        <member name="P:SimpleDiscord.IApplicationCommandOption.Choices">
            <summary>
            Gets the choices for <see cref="F:SimpleDiscord.ApplicationCommandOptionType.String"/> and <see cref="F:SimpleDiscord.ApplicationCommandOptionType.Integer"/> option types for the user to pick from, if applicable.
            </summary>
            <remarks>
            <para>If these choices exist for an option, they are the only valid values for a user to pick.</para>
            </remarks>
            <value>
            The choices for this command option. This should be <see langword="null"/> if <see cref="P:SimpleDiscord.IApplicationCommandOption.Type"/> is not <see cref="F:SimpleDiscord.ApplicationCommandOptionType.String"/> or <see cref="F:SimpleDiscord.ApplicationCommandOptionType.Integer"/>, or if any option is allowed.
            </value>
        </member>
        <member name="P:SimpleDiscord.IApplicationCommandOption.Options">
            <summary>
            Gets the parameters for <see cref="F:SimpleDiscord.ApplicationCommandOptionType.SubCommand"/> and <see cref="F:SimpleDiscord.ApplicationCommandOptionType.SubCommandGroup"/> option types, if applicable.
            </summary>
            <value>
            The parameters of this subcommand or subcommand group. This should be <see langword="null"/> if <see cref="P:SimpleDiscord.IApplicationCommandOption.Type"/> is not <see cref="F:SimpleDiscord.ApplicationCommandOptionType.SubCommand"/> or <see cref="F:SimpleDiscord.ApplicationCommandOptionType.SubCommandGroup"/>.
            </value>
        </member>
        <member name="T:SimpleDiscord.IApplicationCommandOptionChoice">
            <summary>
            Represents a choice in an application command option, as defined in <see href="https://discord.com/developers/docs/interactions/slash-commands#applicationcommandoptionchoice">Discord's documentation</see>.
            </summary>
        </member>
        <member name="P:SimpleDiscord.IApplicationCommandOptionChoice.Name">
            <summary>
            Gets the name of this choice.
            </summary>
            <value>
            The 1-100 character choice name.
            </value>
        </member>
        <member name="P:SimpleDiscord.IApplicationCommandOptionChoice.Value">
            <summary>
            Gets the value of the choice.
            </summary>
            <value>
            The <see cref="T:System.String"/> or <see cref="T:System.Int32"/> that is the value of this choice. If it's a <see cref="T:System.String"/>, it should be up to 100 characters long.
            </value>
        </member>
        <member name="T:SimpleDiscord.InteractionResponseType">
            <summary>
            Represents the type of response to an interaction.
            </summary>
            <seealso href="https://discord.com/developers/docs/interactions/slash-commands#interaction-response-interactionresponsetype"/>
        </member>
        <member name="F:SimpleDiscord.InteractionResponseType.Pong">
            <summary>
            Acknowledge a ping.
            </summary>
        </member>
        <member name="F:SimpleDiscord.InteractionResponseType.Acknowledge">
            <summary>
            Acknowledge a command without sending a message, eating the user's input.
            </summary>
            <remarks>
            <para>Deprecated in pull request <see href="https://github.com/discord/discord-api-docs/pull/2615">#2615</see>.</para>
            </remarks>
        </member>
        <member name="F:SimpleDiscord.InteractionResponseType.ChannelMessage">
            <summary>
            Respond with a message, eating the user's input.
            </summary>
            <remarks>
            <para>Deprecated in pull request <see href="https://github.com/discord/discord-api-docs/pull/2615">#2615</see>.</para>
            </remarks>
        </member>
        <member name="F:SimpleDiscord.InteractionResponseType.ChannelMessageWithSource">
            <summary>
            Respond with a message, showing the user's input.
            </summary>
        </member>
        <member name="F:SimpleDiscord.InteractionResponseType.AcknowledgeWithSource">
            <summary>
            Acknowledge a command without sending a message, showing the user's input.
            </summary>
        </member>
        <member name="T:SimpleDiscord.RatelimitBucket">
            <summary>
            Represents the ratelimit for one route of Discord's HTTP API.
            </summary>
            <remarks>
            <para>This class is used by </para>
            <para>Each bucket has three possible states:</para>
            <list type="bullet">
            <item>
            <term>Expired</term>
            <description>This is the initial state of the bucket. <see cref="P:SimpleDiscord.RatelimitBucket.IsActive"/> is <see langword="false"/>, and <see cref="F:SimpleDiscord.RatelimitBucket.firstRequest"/> is <see langword="null"/>. In this state, only one request is allowed to go through, and then the bucket switches to the second state.</description>
            </item>
            <item>
            <term>Awaiting first request</term>
            <description><see cref="P:SimpleDiscord.RatelimitBucket.IsActive"/> is <see langword="false"/>, and <see cref="F:SimpleDiscord.RatelimitBucket.firstRequest"/> is a task that, when completed, switches this bucket to another state. No requests are allowed to be made in this state; methods should await <see cref="F:SimpleDiscord.RatelimitBucket.firstRequest"/> before sending.</description>
            </item>
            <item>
            <term>Active</term>
            <description><see cref="P:SimpleDiscord.RatelimitBucket.IsActive"/> is <see langword="true"/>. Requests are only allowed to be made until <see cref="P:SimpleDiscord.RatelimitBucket.Remaining"/> is 0.</description>
            </item>
            </list>
            </remarks>
            <seealso href="https://discord.com/developers/docs/topics/rate-limits#header-format"/>
        </member>
        <member name="P:SimpleDiscord.RatelimitBucket.Limit">
            <summary>
            Gets the number of requests that can be made to this endpoint per time interval, or <c>-1</c>.
            </summary>
            <value>
            The number of requests that can be made to this endpoint per time interval. <c>-1</c> if that value is not known yet.
            </value>
            <remarks>
            <para>This number is zero if no request has been made yet to the endpoint that this bucket represents.</para>
            </remarks>
        </member>
        <member name="P:SimpleDiscord.RatelimitBucket.Remaining">
            <summary>
            The number of remaining requests that can be made before the bucket resets.
            </summary>
        </member>
        <member name="P:SimpleDiscord.RatelimitBucket.Reset">
            <summary>
            Point in time at which the bucket resets.
            </summary>
        </member>
        <member name="P:SimpleDiscord.RatelimitBucket.IsActive">
            <summary>
            If <see langword="true"/>, this bucket still applies. If <see langword="false"/>, it has expired or never been used.
            </summary>
        </member>
        <member name="P:SimpleDiscord.RatelimitBucket.TimeLeft">
            <summary>
            Returns the amount of time until this bucket gets reset.
            </summary>
        </member>
        <member name="T:SimpleDiscord.Util">
            <summary>
            Provides utility methods used throughout this program.
            </summary>
        </member>
        <member name="M:SimpleDiscord.Util.CreateJson(System.Action{System.Text.Json.Utf8JsonWriter})">
            <summary>
            Creates JSON text using a <see cref="T:System.Text.Json.Utf8JsonWriter"/>.
            </summary>
            <param name="write">Writes the data to the JSON. The initial object start and the closing object end do not have to be written.</param>
            <returns>The written JSON text in UTF-8 encoding.</returns>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:SimpleDiscord.Util.WriteObjectArray``1(System.Text.Json.Utf8JsonWriter,System.String,System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Writes a JSON array of objects with a property name specified as a string as the key.
            </summary>
            <remarks>
            <para>If <paramref name="array"/> is <see langword="null"/>, nothing is written.</para>
            </remarks>
            <typeparam name="T">The type of object in the array.</typeparam>
            <param name="writer">The writer to write to.</param>
            <param name="propertyName">The UTF-16 encoded property name of the JSON array to be transcoded and written as UTF-8.</param>
            <param name="array">The array to write. If <see langword="null"/>, nothing is written.</param>
            <param name="writeObjectValues">A delegate that writes one instance of <typeparamref name="T"/> to the <paramref name="writer"/>. It does not need to call <see cref="M:System.Text.Json.Utf8JsonWriter.WriteStartObject"/> or <see cref="M:System.Text.Json.Utf8JsonWriter.WriteEndObject"/>, because that will already be done for you.</param>
            <exception cref="T:System.ArgumentException"><paramref name="propertyName"/> is too large.</exception>
            <exception cref="T:System.InvalidOperationException">The depth of the JSON exceeds the maximum depth of 1,000.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="propertyName"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:SimpleDiscord.Util.GetBucket(System.Collections.Generic.Dictionary{System.String,SimpleDiscord.RatelimitBucket},System.String)">
            <summary>
            Gets the ratelimit bucket associated with a specified identifier. If the bucket does not exist yet, it gets created.
            </summary>
            <param name="buckets">The collection of buckets to get the ratelimit from. If this collection does not contain <paramref name="key"/>, a new bucket will be added to this collection.</param>
            <param name="key">The key of the bucket in the <paramref name="buckets"/> collection.</param>
            <returns>The ratelimit bucket that either already existed in <paramref name="buckets"/> or was newly created.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:SimpleDiscord.Util.ThrowIfInvalidId(System.String,System.String,System.Boolean)">
            <summary>
            Throws an <see cref="T:System.ArgumentException"/> if a <see href="https://discord.com/developers/docs/reference#snowflakes">snowflake ID</see> is invalid.
            </summary>
            <param name="id">The string to test.</param>
            <param name="paramName">The name of the parameter to mention in the exception.</param>
            <param name="allowNull"><see langword="true"/> if this method should not throw if <paramref name="id"/> is <see langword="null"/>; <see langword="false"/> if this method should throw in that case.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="id"/> is not a valid ID.</exception>
        </member>
    </members>
</doc>
